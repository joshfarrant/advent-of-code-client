{
  "meta": {
    "createdAt": 1702203170329
  },
  "puzzle": {
    "day": 1,
    "title": "Trebuchet?!"
  },
  "notes": "Part 1 of this was relatively straight-forward, however part 2 added some complications.\n\nMy first solution to part 2 would replace all occurences of spelled out numbers (one, two, three, etc) with the numeric version using something like this.\n\n```ts\nstr.replace(/(one|two|three|etc)/g, getDigit);\n```\n\nHowever this caused issues in cases where the string ended with a pair of spelled out numbers which shared a end/start character, for example _twone_, _oneight_. In these cases, the string would be read left-to-right, so the first number would be replaced, thus breaking the second number. So _twone_ would become _2ne_ and _oneight_ would become _1ight_, which would result in an incorrect total.\n\nI considered an approach where I would read the string backwards and replace occurences of reversed spelled out numbers, eg _eno_, _owt_, etc, however this felt messy and I was sure there was a better way. It turns out there's not really a nice way of doing it, and in the end I had to seek out a hint from the subreddit.\n",
  "solutions": {
    "part1": "import { map, pipe, replace, split, sum } from 'rambda';\n\nconst getFirstAndLastChar = (x: string): string => `${x.at(0)}${x.at(-1)}`;\nconst removeLetters = replace(/[a-z]/gi, '');\nconst splitLines = split('\\n');\n\nexport default pipe(\n  removeLetters,\n  splitLines,\n  map(getFirstAndLastChar),\n  map(Number),\n  sum,\n);\n",
    "part2": "import { map, pipe, replace, split, sum, tap } from 'rambda';\n\nconst firstAndLastChar = (x: string): string => `${x.at(0)}${x.at(-1)}`;\nconst removeLetters = replace(/[a-z]/gi, '');\nconst splitLines = split('\\n');\n\n/**\n * Used for handling cases where multiple spelled out numbers share a start/end\n * character. For example: oneight, twone, sevenineight.\n */\nconst replaceNumberWords = pipe(\n  replace(/(one)/gi, 'o1e'),\n  replace(/(two)/gi, 't2o'),\n  replace(/(three)/gi, 't3e'),\n  replace(/(four)/gi, 'f4r'),\n  replace(/(five)/gi, 'f5e'),\n  replace(/(six)/gi, 's6x'),\n  replace(/(seven)/gi, 's7n'),\n  replace(/(eight)/gi, 'e8t'),\n  replace(/(nine)/gi, 'n9e'),\n);\n\nexport default pipe(\n  replaceNumberWords,\n  removeLetters,\n  splitLines,\n  map(firstAndLastChar),\n  map(Number),\n  sum,\n);\n"
  }
}